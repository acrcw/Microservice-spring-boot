spring.application.name=API-Gateway
#microservice mapping
server.port=8001
# to register as eureka client
eureka.client.serviceUrl.defaultZone=http://localhost:8080/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# zipkin
# trace every request | in prod reduce sampling rate to 0.6
management.tracing.sampling.probability=1.0
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

# Gateway routing logic
spring.cloud.gateway.routes[0].id=companymicroservice
#spring.cloud.gateway.routes[0].uri=http://localhost:8081/
# use service discovery to locate the service address | best for multiple instances of a service
spring.cloud.gateway.routes[0].uri=lb://COMPANYMICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/company/**

spring.cloud.gateway.routes[1].id=jobmicroservice
#spring.cloud.gateway.routes[1].uri=http://localhost:8082/api/v1
# use service discovery to locate the service address
spring.cloud.gateway.routes[1].uri=lb://JOBMICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/jobs/**

spring.cloud.gateway.routes[2].id=companymicroservice
#spring.cloud.gateway.routes[2].uri=http://localhost:8083/api/v1
# use service discovery to locate the service address
spring.cloud.gateway.routes[2].uri=lb://REVIEWMICROSERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/reviews/**


# route for eureka
#spring.cloud.gateway.routes[3].id=ApiGateway
#spring.cloud.gateway.routes[3].uri=http://localhost:8083/api/v1
# use service discovery to locate the service address
# spring.cloud.gateway.routes[3].uri=http://localhost:8080/
#spring.cloud.gateway.routes[3].uri=${EUREKAURL}
#spring.cloud.gateway.routes[3].predicates[0]=Path=/eureka/main
#spring.cloud.gateway.routes[3].filters[0]=SetPath=/

# route for css eureka
#spring.cloud.gateway.routes[4].id=eureka-static-css
#spring.cloud.gateway.routes[4].uri=http://localhost:8083/api/v1
# use service discovery to locate the service address
#spring.cloud.gateway.routes[4].uri=${EUREKAURL}
# spring.cloud.gateway.routes[4].uri=http://localhost:8080/
#spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/**


# spring.cloud.gateway.discovery.locator.enabled=true
# spring.cloud.gateway.discovery.locator.lower-case-service-id=true


# activate hidden actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

# to populate info endpoint
management.info.env.enabled=true
info.app.name=API-Gateway
info.app.description=API-Gateway for Microservices
info.app.version=1

# to enable shutdown endpoint in actuator
#management.endpoint.shutdown.enabled=true

# enable graceful shutdown from actuator endpoint
server.shutdown=graceful
# gracefull shutdown means all the ongoing request will completed and then the server will shutdown

#logging lvl
logging.level.root=info
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionLocator=INFO
logging.level.org.springframework.cloud.gateway=TRACE
