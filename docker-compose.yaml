# https://stackoverflow.com/questions/46057625/externalising-spring-boot-properties-when-deploying-to-docker
# it would be enough to declare what you want to override as environment properties and Spring Boot will fetch them, since environment variables take precedence over the yml files.
#  in url we need to use service name instead of localhost
services:
  mongo-db:
    image: mongo
    restart: always
    container_name: mongo-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks: 
      - microservicenetwork
    volumes:
      - mongodb_data_container:/data/db


  mongo-express:
    depends_on:
      - mongo-db
    image: mongo-express
    restart: always
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo-db:27017/
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_MONGODB_SERVER: mongo-db
    networks: 
      - microservicenetwork

  companymsvc:
    image: 'acrcw/companymicrosvc:v1'
    build:
      context: .
    container_name: companymsvc
    depends_on:
      - eureka-service
      - rabbitmq-server
    environment:
      - SERVER_PORT=9091
      - SPRING_DATA_MONGODB_URI=mongodb://joban:joban@mongo-db:27017/
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:7000/eureka
      - SPRING_DATA_MONGODB_DATABASE=company
      - MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin:9411//api/v2/spans
      - SPRING.RABBITMQ.HOST=rabbitmq-server
      - SPRING.RABBITMQ.PORT=5672
      - SPRING.RABBITMQ.USERNAME=guest
      - SPRING.RABBITMQ.PASSWORD=guest

    networks: 
      - microservicenetwork
    ports:
      - "9091:9091"

  jobmsvc:
    image: 'acrcw/jobmicrosvc:v1'
    build:
      context: .
    container_name: jobmsvc
    depends_on:
      - eureka-service
    environment:
      - SERVER_PORT=9092
      - SPRING_DATA_MONGODB_URI=mongodb://joban:joban@mongo-db:27017/
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:7000/eureka
      - SPRING_DATA_MONGODB_DATABASE=job
      - MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin:9411//api/v2/spans
      - SPRING.RABBITMQ.HOST=rabbitmq-server
      - SPRING.RABBITMQ.PORT=5672
      - SPRING.RABBITMQ.USERNAME=guest
      - SPRING.RABBITMQ.PASSWORD=guest
    networks: 
      - microservicenetwork
    ports:
      - "9092:9092"

  reviewmsvc:
    image: 'acrcw/reviewmicrosvc:v1'
    build:
      context: .
    container_name: reviewmsvc
    depends_on:
      - eureka-service
      - rabbitmq-server
    environment:
      - SERVER_PORT=9093
      - SPRING_DATA_MONGODB_URI=mongodb://joban:joban@mongo-db:27017/
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:7000/eureka
      - SPRING_DATA_MONGODB_DATABASE=review
      - MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin:9411//api/v2/spans
      - SPRING.RABBITMQ.HOST=rabbitmq-server
      - SPRING.RABBITMQ.PORT=5672
      - SPRING.RABBITMQ.USERNAME=guest
      - SPRING.RABBITMQ.PASSWORD=guest
    networks: 
      - microservicenetwork
    ports:
      - "9093:9093"

  eureka-service:
    image: 'acrcw/eurekaserver:v1'
    build:
      context: .
    container_name: eureka-service
    depends_on:
      - mongo-db
    environment:
      - SERVER_PORT=7000
    ports:
      - "8761:7000"
    networks: 
      - microservicenetwork

  API-Gateway-service:
    image: 'acrcw/apigateway:v1'
    build:
      context: .
    container_name: API-Gateway-service
    depends_on:
      - eureka-service
      - reviewmsvc
      - jobmsvc
      - companymsvc
      - zipkin
    environment:
      - SERVER_PORT=8080
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:7000/eureka
      - MANAGEMENT.ZIPKIN.TRACING.ENDPOINT=http://zipkin:9411//api/v2/spans
    ports:
      - "8080:8080"
    networks: 
      - microservicenetwork

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
    - microservicenetwork

  rabbitmq-server:
    image: rabbitmq:3.13-management
    container_name: rabbitmq-server
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
    - microservicenetwork
      
networks:
  microservicenetwork:
    driver: bridge

volumes:
  mongodb_data_container:
